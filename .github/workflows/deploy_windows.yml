name: Deploy_Windows

on: [workflow_dispatch]

env:
    VCPKG_BINARY_SOURCES: "clear;x-gha,readwrite"

jobs:
  deploy_windows:
    name: windows deploy
    runs-on: windows-latest
    steps:
    - name: Checkout Diabolika
      uses: actions/checkout@v3

    - name: Export GitHub Actions cache environment variables
      uses: actions/github-script@v6
      with:
        script: |
          core.exportVariable('ACTIONS_CACHE_URL', process.env.ACTIONS_CACHE_URL || '');
          core.exportVariable('ACTIONS_RUNTIME_TOKEN', process.env.ACTIONS_RUNTIME_TOKEN || '');

    - name: Download CSFML
      run: |
        Invoke-WebRequest -Uri "https://github.com/dgcor/CSFML/releases/download/2.6.1.1/CSFML-2.6.1-windows-64-bit.zip" -OutFile "CSFML-2.6.1-windows-64-bit.zip"
        Invoke-WebRequest -Uri "https://github.com/dgcor/CSFML/releases/download/2.6.1.1/OpenAL32.zip" -OutFile "OpenAL32.zip"
        New-Item -ItemType Directory -Path "dependencies\csfml" -Force
        Expand-Archive -Path "CSFML-2.6.1-windows-64-bit.zip" -DestinationPath "dependencies\csfml"
        Rename-Item -Path "dependencies\csfml\CSFML" -NewName "install"
        Move-Item -Path "dependencies\csfml\install\lib\gcc\*.*" -Destination "dependencies\csfml\install\lib"
        Expand-Archive -Path "OpenAL32.zip" -DestinationPath .

    - name: Download physfs
      run: |
        Invoke-WebRequest -Uri "https://github.com/dgcor/physfs-mirror/releases/download/bin-3.2.0/physfs-windows-64-bit.zip" -OutFile "physfs-windows-64-bit.zip"
        New-Item -ItemType Directory -Path "dependencies\physfs\install\lib" -Force
        Expand-Archive -Path "physfs-windows-64-bit.zip" -DestinationPath "dependencies\physfs\install\lib"

    - name: Setup Cangjie
      run: |
        Invoke-WebRequest -Uri "https://github.com/causerp/cangjie/releases/download/v0.53.18/Cangjie-0.53.18-windows_x64.zip" -OutFile "Cangjie-0.53.18-windows_x64.zip"
        Expand-Archive -Path "Cangjie-0.53.18-windows_x64.zip" -DestinationPath "."

    - name: Build Diabolika
      shell: bash
      run: |
        find . -name "cjpm.toml" -exec sed -i 's/--dy-std --dy-libs/--disable-reflection --static-std --static-libs/g' {} \;
        find . -name "cjpm.toml" -exec sed -i 's/link-option = ""/link-option = "-s"/g' {} \;
        find . -name "cjpm.toml" -exec sed -i 's/output-type = "dynamic"/output-type = "static"/g' {} \;
        source ./cangjie/envsetup.sh
        cjpm build

    - name: Install UPX
      uses: crazy-max/ghaction-upx@v3
      with:
        install-only: true

    - name: Create Diabolika zip
      run: |
        mv target/release/bin/main.exe Diabolika.exe
        mv dependencies/csfml/install/bin/*.dll .
        mv dependencies/physfs/install/lib/*.dll .
        rm csfml-network-2.dll
        cp cangjie/runtime/lib/windows_x86_64_llvm/libcangjie-runtime.dll
        cp cangjie/runtime/lib/windows_x86_64_llvm/libsecurec.dll
        upx -9 *.exe
        upx -9 *.dll
        7z a Diabolika-windows-x64.zip *.exe *.dll LICENSE.* README.* main.json gamefiles*

    - name: Create Diabolika zip artifact
      uses: actions/upload-artifact@v4
      with:
        name: artifact-Diabolika-windows-x64
        path: Diabolika-windows-x64.zip
